#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Sun Apr  2 22:02:51 2017

@author: Niwatori
"""

'''
# Gauss-Hermite Quadrature
# Input: Target function f, order n (3, 6, 9 or 12)
# Output: Integral of exp(-x^2)*f(x) on (-inf,+inf)
'''

from math import cos, sqrt, pi, exp
    
def GaussHermite(f, n):
    ans = 0
    k = n//3-1
    for i in range(0, n):
        ans += A[k][i] * f(x[k][i])
    return ans

# Gauss-Hermite quadrature
f = lambda x:cos(x)
ans = sqrt(pi)*exp(-1/4)
print('%.20f'%(ans))
for n in range(3, 15, 3):
    approx = GaussHermite(f, n)
    print('%d&%.20f&%.20f\\\\'%(n,approx, abs(approx-ans)))

# Nodes and weights of Gauss-Hermite quadrature of order 3,6,9,12
x = [[-1.22474487139158905,
0,
1.22474487139158905,
],
[-2.35060497367449222,
-1.33584907401369695,
-0.436077411927616509,
0.436077411927616509,
1.33584907401369695,
2.35060497367449222,
],
[-3.19099320178152761,
-2.26658058453184311,
-1.46855328921666793,
-0.72355101875283757,
0,
0.723551018752837573,
1.46855328921666793,
2.26658058453184311,
3.19099320178152761,
],
[-3.88972489786978192,
-3.02063702512088977,
-2.2795070805010599,
-1.5976826351526048,
-0.947788391240163744,
-0.314240376254359111,
0.31424037625435911,
0.947788391240163744,
1.5976826351526048,
2.2795070805010599,
3.02063702512088977,
3.88972489786978192,
]
]

A = [[0.295408975150919338,
1.18163590060367735,
0.29540897515091934,
],
[0.0045300099055088456,
0.157067320322856644,
0.724629595224392524,
0.72462959522439252,
0.157067320322856644,
0.0045300099055088456,
],
[3.9606977263264382E-5,
0.0049436242755369472,
0.08847452739437657,
0.43265155900255575,
0.720235215606050957,
0.43265155900255575,
0.088474527394376573,
0.0049436242755369472,
3.960697726326438E-5,
],
[2.6585516843563016E-7,
8.5736870435878587E-5,
0.0039053905846290619,
0.05160798561588393,
0.260492310264161129,
0.570135236262479578,
0.570135236262479578,
0.260492310264161129,
0.05160798561588393,
0.00390539058462906186,
8.5736870435878587E-5,
2.6585516843563016E-7,
]
]